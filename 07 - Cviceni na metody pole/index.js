'use strict';
console.log('%c JavaScript funguje! ', 'background-color: black; color: lime;');

// Cviƒçen√≠ na metody pole

const zasoby = [
  { nazev: 'üçè jablka',    typ: 'ovoce',    pocet: 2,  trvanlivost: 26  },
  { nazev: 'ü•î brambory',  typ: 'zelenina', pocet: 27, trvanlivost: 180 },
  { nazev: 'ü•© hovƒõz√≠',    typ: 'maso',     pocet: 3,  trvanlivost: 3   },
  { nazev: 'üçû chleba',    typ: 'peƒçivo',   pocet: 4,  trvanlivost: 2   },
  { nazev: 'ü•¶ brokolice', typ: 'zelenina', pocet: 1,  trvanlivost: 11  },
  { nazev: 'üç© koblihy',   typ: 'peƒçivo',   pocet: 6,  trvanlivost: 2   },
  { nazev: 'üçì jahody',    typ: 'ovoce',    pocet: 12, trvanlivost: 7   },
  { nazev: 'ü•ï mrkev',     typ: 'zelenina', pocet: 7,  trvanlivost: 40  },
  { nazev: 'üßÄ s√Ωr',       typ: 's√Ωr',      pocet: 2,  trvanlivost: 10  },
  { nazev: 'üçó ku≈ôec√≠',    typ: 'maso',     pocet: 4,  trvanlivost: 4   },
];

// √ökoly:

// 1) Projdi pole metodou forEach a vypi≈° do konzole
// jednu po druh√© seznam v≈°ech z√°sob, staƒç√≠ v≈ædy jen n√°zev a poƒçet.

zasoby.forEach((jidlo) => {
  console.log(`${jidlo.nazev}, ${jidlo.pocet} ks`)})


// 2) P≈ôidej na konec pole nov√© z√°soby.
// (JavaScriptem! Ne ≈æe je p≈ôip√≠≈°e≈° ruƒçnƒõ do pole naho≈ôe :D)
// - üßÖ cibule, zelenina, 4 kusy, trvanlivost 120 dn≈Ø
// - üç∞ dort√≠k, peƒçivo, 1 kus, trvanlivost 1 den

let cibule = {
  nazev: "üßÖ cibule",
  typ: "zelenina",
  pocet: 4,
  trvanlivost: 120,
}

zasoby.push(cibule);

// let dortik = {};
// zasoby.push(dortik = {nazev: "üç∞ dort√≠k", typ: "peƒçivo", pocet: 1, trvanlivost: 1})

zasoby.push({nazev: "üç∞ dort√≠k", typ: "peƒçivo", pocet: 1, trvanlivost: 1});
  // t√≠m, ≈æe naho≈ôe nem√°m objekty pomenovan√©, tak to tam m≈Ø≈æu push bez n√°zvu objektu...
  //ALE funguje i horn√≠ p≈ô√≠pad s dort√≠kem v promƒõnn√©, kter√Ω mam zakomentovan√Ω

console.log(zasoby);      // !!! nezapomenout to vypsat do konzole !!!

console.log("---------------------")


// 3) Vytvo≈ô nov√© pole zelenina, a filter do nƒõj vyber
// v≈°echny zeleninov√© z√°soby.

let zelenina = zasoby.filter((jidlo) => jidlo.typ === "zelenina");

zelenina.forEach((jidlo) => {
  console.log(`${jidlo.nazev}, ${jidlo.pocet}`)
});


console.log("----------------------")

// 4) Odj√≠≈æd√≠≈° na 5 dn≈Ø pryƒç. Vyfiltruj a vypi≈° v≈°echny
// z√°soby, kter√© je pot≈ôeba rychle sn√≠st, aby se nezkazily.
// Tj. maj√≠ trvanlivost <= 5.

let food = zasoby.filter((jidlo) => jidlo.trvanlivost <= 5);

food.forEach((jidlo) => {
  console.log(`${jidlo.nazev}, ${jidlo.trvanlivost}`)
}); 


        // const food = zasoby.filter(jidlo => {             // proƒç j√≠dlo nemus√≠ b√Ωt v z√°vorce?
        //   return jidlo.trvanlivost <= 5
        // }).map((jidlo) => {
        //   return `${jidlo.nazev}`
        // })

        // console.log(food)


console.log("---------------------")

// 5) Vr√°tila ses z v√Ωletu a m√°≈° dojem, ≈æe m√°≈° pr√°zdnou spi≈æ√≠rnu.
// Zeleninu a ovoce moc nej√≠≈°, tak≈æe ty tƒõ nezaj√≠maj√≠,
// ale vyfiltruj a vypi≈° v≈°echny ostatn√≠ potraviny,
// od kter√Ωch m√°≈° jen 3 kusy nebo m√©nƒõ - jde se nakupovat!

let food2 = zasoby.filter((jidlo) => 
  jidlo.typ !== "zelenina" && jidlo.typ !== "ovoce" && jidlo.pocet <= 3);

food2.forEach((jidlo) => {
  console.log(`${jidlo.nazev}, ${jidlo.pocet}`)
});


        // food2.forEach((jidlo) => {
        //   if (jidlo.pocet <= 3) {
        //   console.log(`${jidlo.nazev}, ${jidlo.pocet}`)
        //   } else {                                            // m≈Ø≈æu to takhle nechat pr√°zdn√©?
        //   }
        // });
